// This file will be autogenerated in the future and should not be edited

//
//  Countries.swift
//  GraphQLTest
//
//  Created by Mathias Quintero on 25.11.19.
//  Copyright Â© 2019 Mathias Quintero. All rights reserved.
//

import Foundation
import Apollo

protocol CountriesCountryFragment : GraphQLFragment { }
protocol CountriesContinentFragment : GraphQLFragment { }
protocol CountriesLanguageFragment : GraphQLFragment { }

struct Countries {
    let client: ApolloClient
    
    enum Query {
        static func continents<Fragment: CountriesContinentFragment>() -> GraphQLPath<[Fragment]?> {
            return GraphQLPath()
        }
        
        static func countries<Fragment: CountriesCountryFragment>() -> GraphQLPath<[Fragment]?> {
            return GraphQLPath()
        }
        
        static func languages<Fragment: CountriesLanguageFragment>() -> GraphQLPath<[Fragment]?> {
            return GraphQLPath()
        }
        
        static func continent<Fragment: CountriesContinentFragment>(code: GraphQLArgument<String?>) -> GraphQLPath<Fragment?> {
            return GraphQLPath()
        }
        
        static func country<Fragment: CountriesCountryFragment>(code: GraphQLArgument<String?>) -> GraphQLPath<Fragment?> {
            return GraphQLPath()
        }
        
        static func language<Fragment: CountriesLanguageFragment>(code: GraphQLArgument<String?>) -> GraphQLPath<Fragment?> {
            return GraphQLPath()
        }
    }

    enum Country {
        static let name = GraphQLPath<String?>()
        
        static let native = GraphQLPath<String?>()
        
        static let code = GraphQLPath<String?>()
        
        static let emoji = GraphQLPath<String?>()
        
        static let phone = GraphQLPath<String?>()
        
        static let currency = GraphQLPath<String?>()
        
        static func continent<Fragment: CountriesContinentFragment>() -> GraphQLPath<Fragment?> {
            return GraphQLPath()
        }
        
        static func languages<Fragment: CountriesLanguageFragment>() -> GraphQLPath<[Fragment]?> {
            return GraphQLPath()
        }
    }

    enum Continent {
        static let name = GraphQLPath<String?>()
        
        static let native = GraphQLPath<String?>()
        
        static let code = GraphQLPath<String?>()
        
        static let emoji = GraphQLPath<String?>()
        
        static let phone = GraphQLPath<String?>()
        
        static let currency = GraphQLPath<String?>()
        
        static func continent<Fragment: CountriesContinentFragment>() -> GraphQLPath<Fragment?> {
            return GraphQLPath()
        }
        
        static func countries<Fragment: CountriesCountryFragment>() -> GraphQLPath<[Fragment]?> {
            return GraphQLPath()
        }
    }

    enum Language {
        static let name = GraphQLPath<String?>()
        
        static let native = GraphQLPath<String?>()
        
        static let code = GraphQLPath<String?>()
        
        static let rtl = GraphQLPath<Int?>()
    }
}
